[{"categories":["HTML"],"content":"HTML + JS 的一个 弹窗 .","date":"2017-03-06","objectID":"/javascript-modal/","tags":["JavaScript","HTML"],"title":"弹窗","uri":"/javascript-modal/"},{"categories":["HTML"],"content":"HTML + JS 的一个 弹窗 ","date":"2017-03-06","objectID":"/javascript-modal/:0:0","tags":["JavaScript","HTML"],"title":"弹窗","uri":"/javascript-modal/"},{"categories":["HTML"],"content":"代码结构 ","date":"2017-03-06","objectID":"/javascript-modal/:1:0","tags":["JavaScript","HTML"],"title":"弹窗","uri":"/javascript-modal/"},{"categories":["HTML"],"content":"html \u003cdiv id='one'\u003e \u003cbutton id='btn'\u003e点我\u003c/button\u003e \u003c/div\u003e \u003cdiv id='two'\u003e \u003cbutton id='btn'\u003e不要点我\u003c/button\u003e \u003c/div\u003e \u003cdiv id='three'\u003e \u003cbutton id='btn'\u003e我是第三个\u003c/button\u003e \u003c/div\u003e ","date":"2017-03-06","objectID":"/javascript-modal/:1:1","tags":["JavaScript","HTML"],"title":"弹窗","uri":"/javascript-modal/"},{"categories":["HTML"],"content":"css * { margin: 0; padding: 0; } .overlay { width: 100%; height: 100%; background: rgba(0, 0, 0, 0.3); position: fixed; left: 0; top: 0; } .floatwin { position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); width: 350px; background: #FFF; left: 50%; border-radius: 4px; } .clear:after { content: ''; display: block; clear: both; } .header { padding: 8px 10px; border-bottom: 1px solid #ccc; } .header\u003espan { float: right; margin: 0; cursor: pointer; } .content { padding: 20px 10px; } .content\u003ep { line-height: 1.5; } .footer { border-top: 1px solid #ddd; padding: 0px 10px; } .footer\u003espan { display: inline-block; float: right; margin: 10px 0px 10px 10px; cursor: pointer; } ","date":"2017-03-06","objectID":"/javascript-modal/:1:2","tags":["JavaScript","HTML"],"title":"弹窗","uri":"/javascript-modal/"},{"categories":["HTML"],"content":"js var Modal = (function () { function _Modal(ct, header, content) { this.ct = ct this.header = header this.content = content this.init() this.bind() } _Modal.prototype = { init: function () { var div = this.div = document.createElement('div') div.innerText = '1' this.html = '\u003cdiv class=\"overlay dis close\"\u003e' this.html += '\u003cdiv class=\"floatwin \"\u003e' this.html += '\u003cdiv class=\"header clear\"\u003e' this.html += '\u003cspan class=\"close\"\u003eX\u003c/span\u003e' this.html += '\u003ch4\u003e' + this.header + '\u003c/h4\u003e' this.html += '\u003c/div\u003e' this.html += '\u003cdiv class=\"content\"\u003e' this.html += '\u003cp\u003e' + this.content + '\u003c/p\u003e' this.html += '\u003c/div\u003e' this.html += '\u003cdiv class=\"footer clear\"\u003e' this.html += '\u003cspan\u003e确定\u003c/span\u003e' this.html += '\u003cspan class=\"close\"\u003e取消\u003c/span\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e' div.innerHTML = this.html console.log(this.html) }, bind: function () { var _this = this console.log(this.ct.querySelectorAll('.close').length) this.ct.querySelector('#btn').addEventListener('click', function (e) { e.stopPropagation(); _this.ct.appendChild(_this.div) }) for (i = 0; i \u003c this.div.querySelectorAll('.close').length; i++) { console.log(1) this.div.querySelectorAll('.close')[i].addEventListener('click', function (e) { e.stopPropagation(); console.log(1) _this.div.parentNode.removeChild(_this.div) }) } this.div.querySelector('.floatwin').addEventListener('click', function (e) { e.stopPropagation(); }) } } return { add: function (ct, header, content) { new _Modal(ct, header, content) } } })() Modal.add(document.querySelector('#one'), '标题啦', '内容啦') Modal.add(document.querySelector('#two'), '标题啦2', '内容啦2') Modal.add(document.querySelector('#three'), '标题啦3', '内容啦4') ","date":"2017-03-06","objectID":"/javascript-modal/:1:3","tags":["JavaScript","HTML"],"title":"弹窗","uri":"/javascript-modal/"},{"categories":["HTML"],"content":"使用原生JavaScript完成一个Tab切换 ","date":"2017-03-09","objectID":"/javascript-tab/:0:0","tags":["JavaScript","HTML"],"title":"HTML + JS 的一个 Tab切换","uri":"/javascript-tab/"},{"categories":["HTML"],"content":"代码结构 ","date":"2017-03-09","objectID":"/javascript-tab/:1:0","tags":["JavaScript","HTML"],"title":"HTML + JS 的一个 Tab切换","uri":"/javascript-tab/"},{"categories":["HTML"],"content":"html \u003cdiv class=\"tab\"\u003e \u003cul class=\"tab-header clearfix\"\u003e \u003cli class=\"active\"\u003e选项1\u003c/li\u003e \u003cli\u003e选项2\u003c/li\u003e \u003cli\u003e选项3\u003c/li\u003e \u003c/ul\u003e \u003cul class=\"tab-container\"\u003e \u003cli class=\"active\"\u003e内容1\u003c/li\u003e \u003cli\u003e内容2\u003c/li\u003e \u003cli\u003e内容3\u003c/li\u003e \u003c/ul\u003e \u003c/div\u003e \u003cdiv class=\"tab\"\u003e \u003cul class=\"tab-header clearfix\"\u003e \u003cli class=\"active\"\u003e选项1\u003c/li\u003e \u003cli\u003e选项2\u003c/li\u003e \u003cli\u003e选项3\u003c/li\u003e \u003cli\u003e选项4\u003c/li\u003e \u003c/ul\u003e \u003cul class=\"tab-container\"\u003e \u003cli class=\"active\"\u003e内容1\u003c/li\u003e \u003cli\u003e内容2\u003c/li\u003e \u003cli\u003e内容3\u003c/li\u003e \u003cli\u003e内容4\u003c/li\u003e \u003c/ul\u003e \u003c/div\u003e \u003cdiv class=\"tab\"\u003e \u003cul class=\"tab-header clearfix\"\u003e \u003cli class=\"active\"\u003e选项1\u003c/li\u003e \u003cli\u003e选项2\u003c/li\u003e \u003cli\u003e选项3\u003c/li\u003e \u003cli\u003e选项4\u003c/li\u003e \u003c/ul\u003e \u003cul class=\"tab-container\"\u003e \u003cli class=\"active\"\u003e内容1\u003c/li\u003e \u003cli\u003e内容2\u003c/li\u003e \u003cli\u003e内容3\u003c/li\u003e \u003cli\u003e内容4\u003c/li\u003e \u003c/ul\u003e \u003c/div\u003e ","date":"2017-03-09","objectID":"/javascript-tab/:1:1","tags":["JavaScript","HTML"],"title":"HTML + JS 的一个 Tab切换","uri":"/javascript-tab/"},{"categories":["HTML"],"content":"css ul, li { margin: 0; padding: 0; } li { list-style: none; } .clearfix:after { content: ''; display: block; clear: both; } .tab { width: 600px; margin: 20px auto; border: 1px solid #ccc; padding: 20px 10px; border-radius: 4px; } .tab-header { border-bottom: 1px solid #ccc; } .tab-header\u003eli { float: left; color: brown; border-top: 1px solid #fff; border-left: 1px solid #fff; border-right: 1px solid #fff; padding: 10px 20px; cursor: pointer; } .tab-header .active { border: 1px solid #ccc; border-bottom-color: #fff; border-radius: 4px 4px 0 0; color: #333; margin-bottom: -1px; } .tab-container { padding: 20px 10px; } .tab-container\u003eli { display: none; } .tab-container\u003e.active { display: block; } .box { height: 1000px; } ","date":"2017-03-09","objectID":"/javascript-tab/:1:2","tags":["JavaScript","HTML"],"title":"HTML + JS 的一个 Tab切换","uri":"/javascript-tab/"},{"categories":["HTML"],"content":"js let headerList = document.querySelectorAll('.tab-header li'); let panelList = document.querySelectorAll('.tab-container li'); //forEach的callback传入三个参数：currentValue、index、array headerList.forEach(function(headerLi){ headerLi.onclick = function(e){ //当点击当前元素是，所有的元素去掉active let currentLi = e.target; headerList.forEach(function(li){ li.classList.remove('active'); }) //当前的元素加上active类,由于headerList是类数组对象所以需要call数组方法indexOf let index = [].indexOf.call(headerList,currentLi); headerList[index].classList.add('active'); //隐藏所有panelList，并显示当前panel panelList.forEach(function(panel){ panel.classList.remove('active'); }) panelList[index].classList.add('active'); } }) ","date":"2017-03-09","objectID":"/javascript-tab/:1:3","tags":["JavaScript","HTML"],"title":"HTML + JS 的一个 Tab切换","uri":"/javascript-tab/"},{"categories":["HTML"],"content":"jQuery $('.tab-header\u003eli').on('click',function(){ let $this = $(this); $panels = $this.parents('.tab').find('.tab-container\u003eli'), index = $(this).index(); $this.siblings().removeClass('active'); $this.addClass('active'); $panels.removeClass('active'); $panels.eq(index).addClass('active'); }) ","date":"2017-03-09","objectID":"/javascript-tab/:1:4","tags":["JavaScript","HTML"],"title":"HTML + JS 的一个 Tab切换","uri":"/javascript-tab/"},{"categories":["HTML"],"content":"封装 function Tab(ct) { this.ct = ct; this.init(); this.bind(); } Tab.prototype.init = function () { this.headerList = this.ct.querySelectorAll('.tab-header\u003eli'); this.panelList = this.ct.querySelectorAll('.tab-container\u003eli'); } Tab.prototype.bind = function () { let _this = this; //把this暂存起来 this.headerList.forEach(function (headerLi) { headerLi.onclick = function (e) { let currentLi = e.target; _this.headerList.forEach(function (li) { li.classList.remove('active'); }) let index = [].indexOf.call(_this.headerList, currentLi); _this.headerList[index].classList.add('active'); _this.panelList.forEach(function (panel) { panel.classList.remove('active'); }) _this.panelList[index].classList.add('active'); } }) } let tab1 = new Tab(document.querySelectorAll('.tab')[0]); let tab2 = new Tab(document.querySelectorAll('.tab')[1]); let tab3 = new Tab(document.querySelectorAll('.tab')[2]); //当创建了对象之后就会创建一个空对象，然后把这个对象的_proto_属性指向Tab.protitype。然后再将 //执行构造函数里的this初始化。 ","date":"2017-03-09","objectID":"/javascript-tab/:1:5","tags":["JavaScript","HTML"],"title":"HTML + JS 的一个 Tab切换","uri":"/javascript-tab/"}]